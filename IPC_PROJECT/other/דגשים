#דגשים.

לאגור מידה פר לקוח.
שיחה- מחשבים לפי זמן.
אינטרנט- מחשבים לפי צריכת מידע.
CDR's send to the billing domain.
לכל לקוח יש רקורד על השימוש שלו. ויש רקורד בין ספקים שונים- שיחות/הודעות יוצאות. בין הספקים יש הסכמים.
כל מה שקורה ברשת (כל אירוע) נשמר ב- CDR. 
אם היה אירועים בין ספקים צריך לעדכן את החשבון ביניהם.
* המערכת מקבלת קבצים שבתוכם יש שורות של CDR ומסכמת עבור כל לקוח את הנתונים ועבור כל ספק שהלקוח שלו יצר קשר איתו. ומאפשרת קריאה/שליפה של המידע ע"י שאילטה (בקשה לכל מידע). ומוציאה סיכום עבור כל לקוח.

* המערכת אוגרת מידע ונותנת גישה למידע.
* המערכת צריכה לעבוד כל הזמן- כל הזמן נוצרים CDR.  
* הכל צריך להתבצע במקביל.
* יש מודולים שאוגרים מידע (קונטיינרים) ומודלים שנותנים פונקציונליות- שעושים פעולות על המידע.
* המערכת מנתחת את ה CDR שמגיע אליה. ולתת מידע על הלקוחות המנויים באותה רשת. ומידע על תקשורת עם ספקים אחרים.
* כל CDR יהיה עדכון של 2 דברים- או 2 לקוחות (שיחה יוצאת ושיחה נכנסת באותו הספק) או של לקוח וספק אחר.
* אירוע (רקורד) שקרה במערכת- CDR- זה האינפוט של המערכת וצריך להוציא ממנו את המידע ולעדכן את מי שצריך.
* מחזיקים 2 רקורדים- לקוחות וספקים אחרים.
* לקוחות וספקים לוקחים את המידע שהוא צריך מה-CDR- ע"י פונקציות get's. הוא לא צריך להבין איך ה-CDR בנוי רק לקחת ממנו את המידע שהוא צריך.
* ה- key בין הלקוח לספקים שונה (ולכן יהיה לכל אחד hash function שונה!) ולכן נחזיק עבור כל אחד מהם hash. לכל אחד יש key משלו. וה- value עבור כל אחד הוא סטרקט עם המידע שכל אחד מחזיק. 
* לקוח- יש מודול שמכיל פונקציית update שמעדכנות את הנתונים. מכיל פוינטר להאש שמחזיק בכל באקט פוינטרים ללקוחות שונים.
* ה- CGF לוקח מידע (query או report) מהאגרגטורים השונים.
* המערכת צריכה לבדוק כל הזמן אם יש קובץ שנכתב בשבילה. לקרוא אותו ומכל שורה להוציא את הסטרינג וליצור ממנו CDR. אחרי שעדכנו ממנו את מה שצריך לזרוק את ה CDR הזה. 
* המודול file handler יושב על הדיסק ובודק האם הגיע קובץ- אם כן לקרוא שורה ולהעביר אותה למודול CDR שיכין ממנה CDR. 
* 
